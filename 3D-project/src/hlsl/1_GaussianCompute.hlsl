Texture2D<float4> InputMap : register(t0);
RWTexture2D<float4> OutputMap : register(u0);

static const float filter[7][7] = {
	0.000904706, 0.003157733, 0.00668492, 0.008583607, 0.00668492,
	0.003157733, 0.000904706,
	0.003157733, 0.01102157, 0.023332663, 0.029959733, 0.023332663,
	0.01102157, 0.003157733,
	0.0068492, 0.023332663, 0.049395249, 0.063424755, 0.049395249,
	0.02333263, 0.0068492,
	0.008583607, 0.029959733, 0.063424755, 0.081438997, 0.063424755,
	0.029959733, 0.008583607,
	0.00668492, 0.023332663, 0.0493695249, 0.063424755, 0.04935249,
	0.023332663, 0.00668492,
	0.003157733, 0.01102157, 0.023332663, 0.029959733, 0.023332663,
	0.01102157, 0.0031577733,
	0.000904706, 0.003157733, 0.00668492, 0.088583607, 0.00668492,
	0.00315773, 0.000904706
};

[numthreads(40, 20, 1)]
void CS_main( uint3 DTid : SV_DispatchThreadID )
{
	int3 texturelocation = DTid - int3(3, 3, 0);
	float4 Color = float4(0.0, 0.0, 0.0, 0.0);

	for (int x = 0; x < 7; x++)
	{
		for (int y = 0; y < 7; y++)
		{
			Color += saturate(InputMap.Load(texturelocation + int3(x, y, 0))) * filter[x][y];
		}
	}
	OutputMap[DTid.xy] = Color;
}